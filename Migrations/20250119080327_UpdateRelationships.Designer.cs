// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EvenimenteSportive.Migrations
{
    [DbContext(typeof(EvenimenteContext))]
    [Migration("20250119080327_UpdateRelationships")]
    partial class UpdateRelationships
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EvenimenteSportive.Models.EvenimentSportiv", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("IDLocatie")
                        .HasColumnType("int");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("IDLocatie");

                    b.ToTable("EvenimenteSportive");
                });

            modelBuilder.Entity("EvenimenteSportive.Models.Locatie", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Capacitate")
                        .HasColumnType("int");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("Locatii");
                });

            modelBuilder.Entity("Participant", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Echipa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IDEveniment")
                        .HasColumnType("int");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Varsta")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("IDEveniment");

                    b.ToTable("Participanti");
                });

            modelBuilder.Entity("Sponsor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<decimal>("Buget")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DurataContract")
                        .HasColumnType("int");

                    b.Property<int>("IDEveniment")
                        .HasColumnType("int");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("IDEveniment");

                    b.ToTable("Sponsori");
                });

            modelBuilder.Entity("EvenimenteSportive.Models.EvenimentSportiv", b =>
                {
                    b.HasOne("EvenimenteSportive.Models.Locatie", "Locatie")
                        .WithMany()
                        .HasForeignKey("IDLocatie")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Locatie");
                });

            modelBuilder.Entity("Participant", b =>
                {
                    b.HasOne("EvenimenteSportive.Models.EvenimentSportiv", "EvenimentSportiv")
                        .WithMany("Participanti")
                        .HasForeignKey("IDEveniment")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EvenimentSportiv");
                });

            modelBuilder.Entity("Sponsor", b =>
                {
                    b.HasOne("EvenimenteSportive.Models.EvenimentSportiv", "EvenimentSportiv")
                        .WithMany("Sponsori")
                        .HasForeignKey("IDEveniment")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EvenimentSportiv");
                });

            modelBuilder.Entity("EvenimenteSportive.Models.EvenimentSportiv", b =>
                {
                    b.Navigation("Participanti");

                    b.Navigation("Sponsori");
                });
#pragma warning restore 612, 618
        }
    }
}
